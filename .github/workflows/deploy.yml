name: Deploy to AWS EC2 via Bastion

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-southeast-2
      ECR_REPOSITORY: dindin-ecommerce-api
      EC2_HOST: ${{ secrets.EC2_HOST }}        # FE Public IP (bastion)
      EC2_USER: ${{ secrets.EC2_USER }}        # usually 'ubuntu'
      EC2_KEY: ${{ secrets.EC2_KEY }}          # SSH private key for FE and BE
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::8} # pakai commit hash biar unik
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

          docker build --no-cache -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest

      - name: Deploy to BE via FE Bastion
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.EC2_HOST }}                # FE Public IP (bastion)
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            echo "Connecting to BE via FE..."
            ssh -o StrictHostKeyChecking=no -i secret_key.pem ubuntu@10.0.0.92 << "EOF"
              export ECR_REPOSITORY=dindin-ecommerce-api
              export IMAGE_TAG=${GITHUB_SHA::8}

              docker pull 632258238440.dkr.ecr.ap-southeast-2.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

              docker stop be_t3 || true
              docker rm be_t3 || true

              docker run -d --name be_t3 -p 3000:3000 --env-file .env \
                632258238440.dkr.ecr.ap-southeast-2.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
            EOF
